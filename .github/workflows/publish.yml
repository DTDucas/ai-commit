name: Publish VSCode Extension

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.vscodeignore'
      - 'LICENSE'
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Lint code
        run: npm run lint

      - name: Compile TypeScript
        run: npm run compile

      - name: Package extension
        run: npm run package

      - name: Send Discord notification - Test Started
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -n "$DISCORD_WEBHOOK" ]; then
            status="‚úÖ Success"
            color=65280
            if [ "${{ job.status }}" != "success" ]; then
              status="‚ùå Failed"
              color=16711680
            fi

            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "üß™ AI Commit Generator - Test Phase",
                "description": "Testing extension build and compilation",
                "color": '$color',
                "fields": [
                  {
                    "name": "Status",
                    "value": "'$status'",
                    "inline": true
                  },
                  {
                    "name": "Branch",
                    "value": "'${{ github.ref_name }}'",
                    "inline": true
                  },
                  {
                    "name": "Commit",
                    "value": "[`'${GITHUB_SHA:0:7}'`]('${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}')",
                    "inline": true
                  }
                ],
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
              }]
            }' "$DISCORD_WEBHOOK"
          fi

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Install VSCE
        run: npm install -g vsce

      - name: Check version changes
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          if git tag | grep -q "v$CURRENT_VERSION"; then
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists"
          else
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "New version $CURRENT_VERSION detected"
          fi

      - name: Send Discord notification - Version Check
        if: steps.version-check.outputs.version_changed == 'false'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -n "$DISCORD_WEBHOOK" ]; then
            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "‚ö†Ô∏è AI Commit Generator - Version Skipped",
                "description": "No new version detected, skipping publish",
                "color": 16776960,
                "fields": [
                  {
                    "name": "Current Version",
                    "value": "v'${{ steps.version-check.outputs.current_version }}'",
                    "inline": true
                  },
                  {
                    "name": "Status",
                    "value": "Already published",
                    "inline": true
                  }
                ],
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
              }]
            }' "$DISCORD_WEBHOOK"
          fi

      - name: Package extension
        if: steps.version-check.outputs.version_changed == 'true'
        run: |
          npm run package
          vsce package

      - name: Publish to Visual Studio Marketplace
        if: steps.version-check.outputs.version_changed == 'true'
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          vsce publish --pat $VSCE_PAT

      - name: Create GitHub Release
        if: steps.version-check.outputs.version_changed == 'true'
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current_version }}
          release_name: Release v${{ steps.version-check.outputs.current_version }}
          body: |
            ## üéâ AI Commit Generator v${{ steps.version-check.outputs.current_version }}

            ### üì¶ Installation
            - Install from [VSCode Marketplace](https://marketplace.visualstudio.com/items?itemName=DTDucas.ai-commit-generator)
            - Or download the `.vsix` file from this release

            ### üîó Links
            - [Repository](https://github.com/${{ github.repository }})
            - [Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
            - [Issues](https://github.com/${{ github.repository }}/issues)

            ### üìã Changelog
            See [README.md](https://github.com/${{ github.repository }}/blob/main/README.md#changelog) for detailed changes.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: steps.version-check.outputs.version_changed == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./ai-commit-generator-${{ steps.version-check.outputs.current_version }}.vsix
          asset_name: ai-commit-generator-${{ steps.version-check.outputs.current_version }}.vsix
          asset_content_type: application/zip

      - name: Create Git Tag
        if: steps.version-check.outputs.version_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ steps.version-check.outputs.current_version }}
          git push origin v${{ steps.version-check.outputs.current_version }}

      - name: Send Discord notification - Success
        if: steps.version-check.outputs.version_changed == 'true' && success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -n "$DISCORD_WEBHOOK" ]; then
            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "üöÄ AI Commit Generator - Published Successfully!",
                "description": "New version has been published to VS Code Marketplace",
                "color": 65280,
                "fields": [
                  {
                    "name": "Version",
                    "value": "v'${{ steps.version-check.outputs.current_version }}'",
                    "inline": true
                  },
                  {
                    "name": "Marketplace",
                    "value": "[Install Extension](https://marketplace.visualstudio.com/items?itemName=DTDucas.ai-commit-generator)",
                    "inline": true
                  },
                  {
                    "name": "GitHub Release",
                    "value": "[View Release]('${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ steps.version-check.outputs.current_version }}')",
                    "inline": true
                  }
                ],
                "footer": {
                  "text": "Deployed by '${{ github.actor }}'"
                },
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
              }]
            }' "$DISCORD_WEBHOOK"
          fi

      - name: Send Discord notification - Failure
        if: steps.version-check.outputs.version_changed == 'true' && failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -n "$DISCORD_WEBHOOK" ]; then
            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "‚ùå AI Commit Generator - Publish Failed",
                "description": "Failed to publish extension to VS Code Marketplace",
                "color": 16711680,
                "fields": [
                  {
                    "name": "Version",
                    "value": "v'${{ steps.version-check.outputs.current_version }}'",
                    "inline": true
                  },
                  {
                    "name": "Failed Step",
                    "value": "Publish to Marketplace",
                    "inline": true
                  },
                  {
                    "name": "Logs",
                    "value": "[View Logs]('${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}')",
                    "inline": true
                  }
                ],
                "footer": {
                  "text": "Attempted by '${{ github.actor }}'"
                },
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
              }]
            }' "$DISCORD_WEBHOOK"
          fi
